#!/usr/bin/env python
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

import argparse
import taskcluster
import sys
import os

import attr


@attr.s
class CredentialRequest:
    protocol = attr.ib()
    host = attr.ib()
    path = attr.ib(default=None)
    username = attr.ib(default=None)


def fetch_secret_from_taskcluster(name):
    if "TASKCLUSTER_PROXY_URL" in os.environ:
        options = {"rootUrl": os.environ["TASKCLUSTER_PROXY_URL"]}
    else:
        options = taskcluster.optionsFromEnvironment(options)
    secrets = taskcluster.Secrets()
    return secrets.get(name)["secret"]


def read_request():
    input = sys.stdin.readlines()
    input = map(lambda line: line.strip("\n").split("=", 1), input)
    return CredentialRequest(**dict(input))


def error(msg):
    print("quit=true")
    sys.stderr.write("{}: {}\n".format(sys.argv[0], msg))
    raise SystemExit(1)


def main():
    parser = argparse.ArgumentParser(
        description="Fetch a taskcluster secret value for git."
    )
    parser.add_argument(
        "command", action="store", help="command", choices=("get", "store", "erase")
    )
    args = parser.parse_args()

    if args.command == "get":
        request = read_request()
        if request != CredentialRequest(protocol="https", host="github.com"):
            error("Unsupported repository: {}.\n".format(request))

        secret_name = os.environ["GITHUB_TOKEN_SECRET_NAME"]
        try:
            secret = fetch_secret_from_taskcluster(secret_name)
        except Exception as e:
            error("Could not get secret: {}".format(e))

        print("username={}".format(secret["username"]))
        print("password={}".format(secret["token"]))
    elif args.command in ("store", "erase"):
        # Ignore mutation commands
        pass
    else:
        error("Unknown command.\n")


if __name__ == "__main__":
    main()
